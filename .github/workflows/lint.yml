name: Lint and check code for errors

on:
  push:
    branches:
      - main
      - dev
    paths:
      - Payload_Type/thanatos/agent
      - Payload_Type/thanatos/mythic

  pull_request:
    branches:
      - main
      - dev
    paths:
      - Payload_Type/thanatos/agent
      - Payload_Type/thanatos/mythic


env:
  AGENT_CODE: Payload_Type/thanatos/agent
  MYTHIC_CODE: Payload_Type/thanatos/mythic

jobs:
  syntax:
    name: Check Syntax
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-lint
        with:
          mythic-code: ${{ env.MYTHIC_CODE }}
          agent-code: ${{ env.AGENT_CODE }}

      - name: Check Mythic code for errors
        working-directory: ${{ env.MYTHIC_CODE }}
        run: poetry run pylint -f colorized --errors-only thanatos/**/*.py

      - name: Check Agent code for errors
        working-directory: ${{ env.THANATOS_PATH }}
        run: cargo check --color always --all-targets --all-features
        env:
          RUSTFLAGS: "--cfg http"
          UUID: ""
          AESPSK: ""
          callback_host: ""
          callback_interval: ""
          callback_jitter: ""
          callback_port: ""
          connection_retries: ""
          encrypted_exchange_check: ""
          get_uri: ""
          headers: ""
          post_uri: ""
          working_hours: ""

  format:
    name: Check Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-lint
        with:
          mythic-code: ${{ env.MYTHIC_CODE }}
          agent-code: ${{ env.AGENT_CODE }}

      - name: Check Mythic code formatting
        working-directory: ${{ env.MYTHIC_CODE }}
        run: poetry run black --color --diff --check thanatos/**/*.py

      - name: Check Agent code formatting
        working-directory: ${{ env.AGENT_CODE }}
        run: cargo fmt -- --color always --check
        env:
          UUID: ""
          AESPSK: ""
          callback_host: ""
          callback_interval: ""
          callback_jitter: ""
          callback_port: ""
          connection_retries: ""
          encrypted_exchange_check: ""
          get_uri: ""
          headers: ""
          post_uri: ""
          working_hours: ""

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-lint
        with:
          mythic-code: ${{ env.MYTHIC_CODE }}
          agent-code: ${{ env.AGENT_CODE }}

      - name: Install Clippy
        run: rustup component add clippy

      - name: Lint Mythic code with pylint
        working-directory: ${{ env.MYTHIC_CODE }}
        run: poetry run pylint -f colorized thanatos/**/*.py

      - name: Lint Agent code with clippy
        working-directory: ${{ env.AGENT_CODE }}
        run: cargo clippy --color always --all-features --all-targets -- -D warnings
        env:
          UUID: ""
          AESPSK: ""
          callback_host: ""
          callback_interval: ""
          callback_jitter: ""
          callback_port: ""
          connection_retries: ""
          encrypted_exchange_check: ""
          get_uri: ""
          headers: ""
          post_uri: ""
          working_hours: ""
