name: Lint and check code for errors

on:
  workflow_call:

env:
  AGENT_CODE: Payload_Type/thanatos/agent
  MYTHIC_CODE: Payload_Type/thanatos/mythic


jobs:
  agent:
    name: Agent Code
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.AGENT_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cargo cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles(format('{0}/Cargo.lock', env.AGENT_CODE)) }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles(format('{0}/Cargo.lock', env.AGENT_CODE)) }}
            ${{ runner.os }}-cargo

      - name: Setup cargo target cache
        uses: actions/cache@v4
        with:
          path: ${{ env.AGENT_CODE }}/target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles(format('{0}/Cargo.lock', env.AGENT_CODE)) }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles(format('{0}/Cargo.lock', env.AGENT_CODE)) }}
            ${{ runner.os }}-cargo-target

      - name: Install Clippy
        run: rustup component add clippy

      - name: Install system libraries
        run: sudo apt-get update -y && sudo apt-get install -y libdbus-1-dev

      - name: Lint agent code
        run: |
          cargo build -p genconfig
          cargo clippy --color always --all-features --all-targets -- -D warnings

      - name: Check agent code formatting
        run: |
          cargo build -p genconfig
          cargo fmt --all -- --color always --check

  mythic:
    name: Mythic Code
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.MYTHIC_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Golang modules
        run: go mod download

      - name: Lint Mythic code
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ${{ env.MYTHIC_CODE }}

      - name: Check Mythic code formatting
        run: gofmt -l -d . | diff -u /dev/null -
