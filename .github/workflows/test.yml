name: Run tests

on:
  push:
    branches:
      - rewrite
    paths:
      - "Payload_Type/thanatos/**"
      - ".github/workflows/**"

env:
  AGENT_CODE: Payload_Type/thanatos/agent
  MYTHIC_CODE: Payload_Type/thanatos

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-agent:
    name: Test Agent Code
    runs-on: ubuntu-latest

    env:
      JSON_CONFIG: testing/configs/config.json

    defaults:
      run:
        working-directory: ${{ env.AGENT_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/workflows/dependencies

      - name: Run tests
        run: make test

  test-mythic:
    name: Test Mythic code
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.MYTHIC_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/workflows/dependencies

      - name: Run tests
        run: make test

  test-sanitizers:
    name: Sanitizer Test Agent Code
    runs-on: ubuntu-latest

    env:
      JSON_CONFIG: testing/configs/config.json

    defaults:
      run:
        working-directory: ${{ env.AGENT_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/workflows/dependencies

      - name: Run sanitizer tests (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: make sanitizers

      - name: Run sanitizer tests (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          $vspath = (Get-VSSetupInstance | Select-VSSetupInstance -Require Microsoft.VisualStudio.Component.VC.ASAN).InstallationPath
          Import-Module $vspath/Common7/Tools/Microsoft.VisualStudio.DevShell.dll
          Enter-VsDevShell -VsInstallPath $vspath -SkipAutomaticLocation
          $env:PATH="$env:PATH;$env:VCToolsInstallDir/bin/Hostx64/x64"
          cargo +nightly test --color always -p ffiwrappers --all-features --target $env:TARGET
        env:
          TARGET: x86_64-pc-windows-msvc
          RUSTFLAGS: -Zsanitizer=address
          CARGO_INCREMENTAL: 0
