pub(crate) const UUID: &'static str = "{{ UUID }}";
pub(crate) const CALLBACK_INTERVAL: u64 = {{ callback_interval }};
pub(crate) const CALLBACK_JITTER: u32 = {{ callback_jitter }};
pub(crate) const CONNECTION_RETRIES: u32 = {{ connection_retries }};
pub(crate) const WORKING_START: u64 = {{ working_start }};
pub(crate) const WORKING_END: u64 = {{ working_end }};

#[cfg(feature = "domain")]
pub(crate) const DOMAIN: [u8; 32] = {{ domain }};

#[cfg(feature = "hostname")]
pub(crate) const HOSTNAME: [u8; 32] = {{ hostname }};

#[cfg(feature = "username")]
pub(crate) const USERNAME: [u8; 32] = {{ username }};

pub(crate) const SPAWNTO: &'static str = "{{ spawnto }}";

pub(crate) mod http {
    pub(crate) const CALLBACK_PORT: u32 = {{ http_callback_port }};
    pub(crate) const GET_URI: &'static str = "{{ http_get_uri }}";
    pub(crate) const HEADERS: &[(&'static str, &'static str)] = &[
        {%- for value in headers %}
            {{ value }}
        {%- endfor %}
    ];
    pub(crate) const KILLDATE: u64 = {{ http_killdate }};
    pub(crate) const POST_URI: &'static str = "{{ http_post_uri }}";
    pub(crate) const QUERY_PATH_NAME: &'static str = "{{ http_query_path_name }}";
    pub(crate) const CALLBACK_HOSTS: &[&str] = &[
        {%- for host in http_callback_hosts %}
            "{{ host }}",
        {%- endfor %}
    ];

    pub(crate) const AESKEY: [u8; 32] = {{ http_AESKEY }};
    pub(crate) const PROXY_HOST: &'static str = "{{ http_proxy_host }}";
    pub(crate) const PROXY_PORT: u32 = {{ http_proxy_port }};
}

pub(crate) mod tcp {
    pub(crate) const KILLDATE: u64 = {{ tcp_killdate }};
    pub(crate) const AESKEY: [u8; 32] = {{ tcp_AESKEY }};
    pub(crate) const PORT: u16 = {{ tcp_port }};
}
