// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.6
// source: config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitAction int32

const (
	InitAction_NONE   InitAction = 0
	InitAction_THREAD InitAction = 1
	InitAction_FORK   InitAction = 2
)

// Enum value maps for InitAction.
var (
	InitAction_name = map[int32]string{
		0: "NONE",
		1: "THREAD",
		2: "FORK",
	}
	InitAction_value = map[string]int32{
		"NONE":   0,
		"THREAD": 1,
		"FORK":   2,
	}
)

func (x InitAction) Enum() *InitAction {
	p := new(InitAction)
	*p = x
	return p
}

func (x InitAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitAction) Descriptor() protoreflect.EnumDescriptor {
	return file_config_config_proto_enumTypes[0].Descriptor()
}

func (InitAction) Type() protoreflect.EnumType {
	return &file_config_config_proto_enumTypes[0]
}

func (x InitAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitAction.Descriptor instead.
func (InitAction) EnumDescriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid              []byte        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Initaction        InitAction    `protobuf:"varint,2,opt,name=initaction,proto3,enum=config.InitAction" json:"initaction,omitempty"`
	ConnectionRetries int32         `protobuf:"zigzag32,3,opt,name=connection_retries,json=connectionRetries,proto3" json:"connection_retries,omitempty"`
	WorkingHours      *WorkingHours `protobuf:"bytes,4,opt,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	Domains           []byte        `protobuf:"bytes,5,opt,name=domains,proto3" json:"domains,omitempty"`
	Hostnames         []byte        `protobuf:"bytes,6,opt,name=hostnames,proto3" json:"hostnames,omitempty"`
	Usernames         []byte        `protobuf:"bytes,7,opt,name=usernames,proto3" json:"usernames,omitempty"`
	SpawnTo           string        `protobuf:"bytes,8,opt,name=spawn_to,json=spawnTo,proto3" json:"spawn_to,omitempty"`
	Tlsuntrusted      bool          `protobuf:"varint,9,opt,name=tlsuntrusted,proto3" json:"tlsuntrusted,omitempty"`
	// Types that are assignable to Profile:
	//
	//	*Config_Http
	Profile isConfig_Profile `protobuf_oneof:"profile"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Config) GetInitaction() InitAction {
	if x != nil {
		return x.Initaction
	}
	return InitAction_NONE
}

func (x *Config) GetConnectionRetries() int32 {
	if x != nil {
		return x.ConnectionRetries
	}
	return 0
}

func (x *Config) GetWorkingHours() *WorkingHours {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

func (x *Config) GetDomains() []byte {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *Config) GetHostnames() []byte {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *Config) GetUsernames() []byte {
	if x != nil {
		return x.Usernames
	}
	return nil
}

func (x *Config) GetSpawnTo() string {
	if x != nil {
		return x.SpawnTo
	}
	return ""
}

func (x *Config) GetTlsuntrusted() bool {
	if x != nil {
		return x.Tlsuntrusted
	}
	return false
}

func (m *Config) GetProfile() isConfig_Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (x *Config) GetHttp() *HttpConfig {
	if x, ok := x.GetProfile().(*Config_Http); ok {
		return x.Http
	}
	return nil
}

type isConfig_Profile interface {
	isConfig_Profile()
}

type Config_Http struct {
	Http *HttpConfig `protobuf:"bytes,10,opt,name=http,proto3,oneof"`
}

func (*Config_Http) isConfig_Profile() {}

type WorkingHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start       uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End         uint32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	UseSystemTz bool   `protobuf:"varint,3,opt,name=use_system_tz,json=useSystemTz,proto3" json:"use_system_tz,omitempty"`
	UtcOffset   int32  `protobuf:"zigzag32,4,opt,name=utc_offset,json=utcOffset,proto3" json:"utc_offset,omitempty"`
}

func (x *WorkingHours) Reset() {
	*x = WorkingHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHours) ProtoMessage() {}

func (x *WorkingHours) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHours.ProtoReflect.Descriptor instead.
func (*WorkingHours) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *WorkingHours) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *WorkingHours) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *WorkingHours) GetUseSystemTz() bool {
	if x != nil {
		return x.UseSystemTz
	}
	return false
}

func (x *WorkingHours) GetUtcOffset() int32 {
	if x != nil {
		return x.UtcOffset
	}
	return 0
}

type HttpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackPort     uint32            `protobuf:"varint,1,opt,name=callback_port,json=callbackPort,proto3" json:"callback_port,omitempty"`
	Killdate         uint64            `protobuf:"varint,2,opt,name=killdate,proto3" json:"killdate,omitempty"`
	CallbackJitter   uint32            `protobuf:"varint,3,opt,name=callback_jitter,json=callbackJitter,proto3" json:"callback_jitter,omitempty"`
	Eke              bool              `protobuf:"varint,4,opt,name=eke,proto3" json:"eke,omitempty"`
	Headers          map[string]string `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AesKey           []byte            `protobuf:"bytes,6,opt,name=aes_key,json=aesKey,proto3" json:"aes_key,omitempty"`
	CallbackHost     string            `protobuf:"bytes,7,opt,name=callback_host,json=callbackHost,proto3" json:"callback_host,omitempty"`
	GetUri           string            `protobuf:"bytes,8,opt,name=get_uri,json=getUri,proto3" json:"get_uri,omitempty"`
	PostUri          string            `protobuf:"bytes,9,opt,name=post_uri,json=postUri,proto3" json:"post_uri,omitempty"`
	QueryPathName    string            `protobuf:"bytes,10,opt,name=query_path_name,json=queryPathName,proto3" json:"query_path_name,omitempty"`
	Proxy            *ProxyInfo        `protobuf:"bytes,11,opt,name=proxy,proto3" json:"proxy,omitempty"`
	CallbackInterval uint32            `protobuf:"varint,12,opt,name=callback_interval,json=callbackInterval,proto3" json:"callback_interval,omitempty"`
}

func (x *HttpConfig) Reset() {
	*x = HttpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpConfig) ProtoMessage() {}

func (x *HttpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpConfig.ProtoReflect.Descriptor instead.
func (*HttpConfig) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *HttpConfig) GetCallbackPort() uint32 {
	if x != nil {
		return x.CallbackPort
	}
	return 0
}

func (x *HttpConfig) GetKilldate() uint64 {
	if x != nil {
		return x.Killdate
	}
	return 0
}

func (x *HttpConfig) GetCallbackJitter() uint32 {
	if x != nil {
		return x.CallbackJitter
	}
	return 0
}

func (x *HttpConfig) GetEke() bool {
	if x != nil {
		return x.Eke
	}
	return false
}

func (x *HttpConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpConfig) GetAesKey() []byte {
	if x != nil {
		return x.AesKey
	}
	return nil
}

func (x *HttpConfig) GetCallbackHost() string {
	if x != nil {
		return x.CallbackHost
	}
	return ""
}

func (x *HttpConfig) GetGetUri() string {
	if x != nil {
		return x.GetUri
	}
	return ""
}

func (x *HttpConfig) GetPostUri() string {
	if x != nil {
		return x.PostUri
	}
	return ""
}

func (x *HttpConfig) GetQueryPathName() string {
	if x != nil {
		return x.QueryPathName
	}
	return ""
}

func (x *HttpConfig) GetProxy() *ProxyInfo {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *HttpConfig) GetCallbackInterval() uint32 {
	if x != nil {
		return x.CallbackInterval
	}
	return 0
}

type ProxyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Pass string `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *ProxyInfo) Reset() {
	*x = ProxyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyInfo) ProtoMessage() {}

func (x *ProxyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyInfo.ProtoReflect.Descriptor instead.
func (*ProxyInfo) Descriptor() ([]byte, []int) {
	return file_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ProxyInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProxyInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProxyInfo) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

var File_config_config_proto protoreflect.FileDescriptor

var file_config_config_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x84, 0x03,
	0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0a,
	0x69, 0x6e, 0x69, 0x74, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x54, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x6c, 0x73, 0x75, 0x6e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x74, 0x6c, 0x73, 0x75, 0x6e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x79, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x7a, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x7a,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x74, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x75, 0x74, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0xef, 0x03, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6b, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6b, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x65, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x74, 0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5b, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x2a, 0x2c,
	0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4f, 0x52, 0x4b, 0x10, 0x02, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x79, 0x74, 0x68, 0x69,
	0x63, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x74, 0x68, 0x61, 0x6e, 0x61, 0x74, 0x6f, 0x73,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_config_proto_rawDescOnce sync.Once
	file_config_config_proto_rawDescData = file_config_config_proto_rawDesc
)

func file_config_config_proto_rawDescGZIP() []byte {
	file_config_config_proto_rawDescOnce.Do(func() {
		file_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_config_proto_rawDescData)
	})
	return file_config_config_proto_rawDescData
}

var file_config_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_config_config_proto_goTypes = []any{
	(InitAction)(0),      // 0: config.InitAction
	(*Config)(nil),       // 1: config.Config
	(*WorkingHours)(nil), // 2: config.WorkingHours
	(*HttpConfig)(nil),   // 3: config.HttpConfig
	(*ProxyInfo)(nil),    // 4: config.ProxyInfo
	nil,                  // 5: config.HttpConfig.HeadersEntry
}
var file_config_config_proto_depIdxs = []int32{
	0, // 0: config.Config.initaction:type_name -> config.InitAction
	2, // 1: config.Config.working_hours:type_name -> config.WorkingHours
	3, // 2: config.Config.http:type_name -> config.HttpConfig
	5, // 3: config.HttpConfig.headers:type_name -> config.HttpConfig.HeadersEntry
	4, // 4: config.HttpConfig.proxy:type_name -> config.ProxyInfo
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_config_config_proto_init() }
func file_config_config_proto_init() {
	if File_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_config_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_config_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WorkingHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_config_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HttpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_config_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_config_proto_msgTypes[0].OneofWrappers = []any{
		(*Config_Http)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_config_proto_goTypes,
		DependencyIndexes: file_config_config_proto_depIdxs,
		EnumInfos:         file_config_config_proto_enumTypes,
		MessageInfos:      file_config_config_proto_msgTypes,
	}.Build()
	File_config_config_proto = out.File
	file_config_config_proto_rawDesc = nil
	file_config_config_proto_goTypes = nil
	file_config_config_proto_depIdxs = nil
}
