{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/MythicAgents/thanatos/main/Payload_Type/thanatos/mythic/testartifacts/schemas/payload_build_spec.schema.json",
  "title": "Payload Build Test Spec",
  "description": "Definition for the payload build test spec file",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string"
    },
    "filename": {
      "description": "Output filename",
      "type": "string"
    },
    "commands": {
      "description": "List of commands to include in the agent",
      "type": "array"
    },
    "selected_os": {
      "description": "Operating system to build the agent for",
      "type": "string",
      "enum": [
        "Linux",
        "Windows"
      ]
    },
    "build_parameters": {
      "description": "Values for the payload build parameters",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "architecture",
        "initoptions",
        "connection_retries",
        "cryptolib",
        "working_hours",
        "output"
      ],
      "properties": {
        "architecture": {
          "description": "Payload architecture",
          "type": "string",
          "enum": [
            "amd64",
            "x86"
          ]
        },
        "initoptions": {
          "description": "Initial execution option",
          "type": "string",
          "enum": [
            "none",
            "Spawn Thread (Windows Only)",
            "Daemonize (Linux Only)"
          ]
        },
        "connection_retries": {
          "description": "Number of times to try and reconnect to Mythic",
          "type": "number"
        },
        "cryptolib": {
          "description": "Library to use for doing crypto routines",
          "type": "string",
          "enum": [
            "internal",
            "system (wincrypto-ng/openssl)"
          ]
        },
        "working_hours": {
          "description": "Working hours for the agent (use 24 hour time)",
          "type": "string"
        },
        "domains": {
          "description": "Limit payload execution to machines joined to one of the following domains",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostnames": {
          "description": "Limit payload execution to machines with one of the specified hostnames",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "usernames": {
          "description": "Limit payload execution to users with one of the specified usernames",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "static": {
          "description": "Libraries to statically link to (Linux only)",
          "type": "string",
          "items": {
            "type": "string",
            "enum": [
              "openssl",
              "libcurl"
            ]
          }
        },
        "tlsselfsigned": {
          "description": "Allow HTTPs connections to self-signed TLS certificates",
          "type": "boolean"
        },
        "spawnto": {
          "description": "Initial spawnto value",
          "type": "string"
        },
        "output": {
          "description": "Payload output format",
          "type": "string",
          "enum": [
            "executable",
            "Shared Library (Run on load)",
            "Shared Library (.dll/.so with export name 'init')",
            "Windows Shellcode"
          ]
        }
      }
    },
    "c2profiles": {
      "description": "Configured C2 profiles",
      "uniqueItems": true,
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "is_p2p",
          "parameters"
        ],
        "properties": {
          "name": {
            "description": "C2 profile name",
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "is_p2p": {
            "description": "Whether the C2 profile is p2p",
            "type": "boolean"
          },
          "parameters": {
            "type": "object"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "name": {
                  "const": "http"
                }
              }
            },
            "then": {
              "properties": {
                "parameters": {
                  "description": "C2 profile parameters",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "callback_host"
                  ],
                  "properties": {
                    "callback_port": {
                      "description": "Callback Port",
                      "type": "number",
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "killdate": {
                      "description": "Kill Date",
                      "type": "string",
                      "pattern": "\\d{4}-\\d{2}-\\d{2}"
                    },
                    "encrypted_exchange_check": {
                      "description": "Perform Key Exchange",
                      "type": "boolean"
                    },
                    "callback_jitter": {
                      "description": "Callback jitter in percent",
                      "type": "number"
                    },
                    "headers": {
                      "description": "HTTP Headers",
                      "type": "object"
                    },
                    "AESPSK": {
                      "description": "Encryption Type",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "Value for the crypto type",
                          "type": "string",
                          "enum": [
                            "aes256_hmac",
                            "none"
                          ]
                        },
                        "enc_key": {
                          "description": "Base64 encoded encryption key",
                          "type": "string"
                        },
                        "dec_key": {
                          "description": "Base64 encoded decryption key",
                          "type": "string"
                        }
                      }
                    },
                    "callback_host": {
                      "description": "Callback Host",
                      "type": "string",
                      "pattern": "^(http|https)://.*[^/]$"
                    },
                    "get_uri": {
                      "description": "GET request URI (don't include leading /)",
                      "type": "string"
                    },
                    "post_uri": {
                      "description": "POST request URI (don't include leading /)",
                      "type": "string"
                    },
                    "query_path_name": {
                      "description": "Name of the query parameter for GET requests",
                      "type": "string",
                      "pattern": "^[^/]"
                    },
                    "proxy_host": {
                      "description": "Proxy Host",
                      "type": "string",
                      "pattern": "^$|^(http|https)://[a-zA-Z0-9]+"
                    },
                    "proxy_port": {
                      "description": "Proxy Port",
                      "type": "string",
                      "pattern": "^$|^[0-9]+$"
                    },
                    "proxy_user": {
                      "description": "Proxy Username",
                      "type": "string"
                    },
                    "proxy_pass": {
                      "description": "Proxy Password",
                      "type": "string"
                    },
                    "callback_interval": {
                      "description": "Callback Interval in seconds",
                      "type": "number",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "expect": {
      "description": "Expected result from the payload build",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "description": "Should the build be successful",
          "type": "boolean"
        },
        "stdout": {
          "description": "Expected stdout value from the resulting payload build",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "contains": {
              "description": "Text the stdout value should contain",
              "type": "string"
            },

            "is": {
              "description": "Value the full stdout message should exactly match",
              "type": "string"
            },

            "regex": {
              "description": "Regular expression for validating the stdout value",
              "type": "string"
            },

            "case_insensitive": {
              "description": "Whether the comparison should be case insensitive",
              "type": "boolean"
            }
          },
          "oneOf": [
            {
              "required": [
                "contains"
              ]
            },
            {
              "required": [
                "regex"
              ]
            },
            {
              "required": [
                "is"
              ]
            }
          ]
        },
        "message": {
          "description": "Expected build message from the resulting payload build",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "contains": {
              "description": "Text the build message should contain",
              "type": "string"
            },

            "regex": {
              "description": "Regular expression for validating the build message",
              "type": "string"
            },

            "is": {
              "description": "Value the full build message should exactly match",
              "type": "string"
            },

            "case_insensitive": {
              "description": "Whether the comparison should be case insensitive",
              "type": "boolean"
            }
          },
          "oneOf": [
            {
              "required": [
                "contains"
              ]
            },
            {
              "required": [
                "regex"
              ]
            },
            {
              "required": [
                "is"
              ]
            }
          ]
        },
        "stderr": {
          "description": "Expected stderr value from the payload build",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "contains": {
              "description": "Text the stderr value should contain",
              "type": "string"
            },

            "regex": {
              "description": "Regular expression for validating the stderr value",
              "type": "string"
            },

            "is": {
              "description": "Value the stderr value should exactly match",
              "type": "string"
            },

            "case_insensitive": {
              "description": "Whether the comparison should be case insensitive",
              "type": "boolean"
            }
          },
          "oneOf": [
            {
              "required": [
                "contains"
              ]
            },
            {
              "required": [
                "regex"
              ]
            },
            {
              "required": [
                "is"
              ]
            }
          ]
        },
        "filename": {
          "description": "Expected new filename from the payload build results",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "contains": {
              "description": "Text the filename should contain",
              "type": "string"
            },

            "regex": {
              "description": "Regular expression for validating the filename",
              "type": "string"
            },

            "is": {
              "description": "Value the filename should exactly match",
              "type": "string"
            },

            "case_insensitive": {
              "description": "Whether the comparison should be case insensitive",
              "type": "boolean"
            }
          },
          "oneOf": [
            {
              "required": [
                "contains"
              ]
            },
            {
              "required": [
                "regex"
              ]
            },
            {
              "required": [
                "is"
              ]
            }
          ]
        },
        "commands": {
          "description": "List of expected updated commands",
          "type": "array"
        }
      }
    }
  }
}
